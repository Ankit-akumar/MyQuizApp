// Generated by view binder compiler. Do not edit!
package com.example.quizapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.quizapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnNewQuiz;

  @NonNull
  public final Button btnPlayAgain;

  @NonNull
  public final CardView cvResultBoard;

  @NonNull
  public final ImageView ivExit;

  @NonNull
  public final ProgressBar progressBarResult;

  @NonNull
  public final TextView tvCorrect;

  @NonNull
  public final TextView tvIncorrect;

  @NonNull
  public final TextView tvUnattempted;

  private ActivityResultBinding(@NonNull LinearLayout rootView, @NonNull Button btnNewQuiz,
      @NonNull Button btnPlayAgain, @NonNull CardView cvResultBoard, @NonNull ImageView ivExit,
      @NonNull ProgressBar progressBarResult, @NonNull TextView tvCorrect,
      @NonNull TextView tvIncorrect, @NonNull TextView tvUnattempted) {
    this.rootView = rootView;
    this.btnNewQuiz = btnNewQuiz;
    this.btnPlayAgain = btnPlayAgain;
    this.cvResultBoard = cvResultBoard;
    this.ivExit = ivExit;
    this.progressBarResult = progressBarResult;
    this.tvCorrect = tvCorrect;
    this.tvIncorrect = tvIncorrect;
    this.tvUnattempted = tvUnattempted;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_new_quiz;
      Button btnNewQuiz = rootView.findViewById(id);
      if (btnNewQuiz == null) {
        break missingId;
      }

      id = R.id.btn_play_again;
      Button btnPlayAgain = rootView.findViewById(id);
      if (btnPlayAgain == null) {
        break missingId;
      }

      id = R.id.cv_result_board;
      CardView cvResultBoard = rootView.findViewById(id);
      if (cvResultBoard == null) {
        break missingId;
      }

      id = R.id.iv_exit;
      ImageView ivExit = rootView.findViewById(id);
      if (ivExit == null) {
        break missingId;
      }

      id = R.id.progress_bar_result;
      ProgressBar progressBarResult = rootView.findViewById(id);
      if (progressBarResult == null) {
        break missingId;
      }

      id = R.id.tv_correct;
      TextView tvCorrect = rootView.findViewById(id);
      if (tvCorrect == null) {
        break missingId;
      }

      id = R.id.tv_incorrect;
      TextView tvIncorrect = rootView.findViewById(id);
      if (tvIncorrect == null) {
        break missingId;
      }

      id = R.id.tv_unattempted;
      TextView tvUnattempted = rootView.findViewById(id);
      if (tvUnattempted == null) {
        break missingId;
      }

      return new ActivityResultBinding((LinearLayout) rootView, btnNewQuiz, btnPlayAgain,
          cvResultBoard, ivExit, progressBarResult, tvCorrect, tvIncorrect, tvUnattempted);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
